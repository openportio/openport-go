FROM rwgrim/msys2-cross
LABEL os=windows
LABEL arch=amd64

ENV GOVERSION="1.14"
ENV GOOS=windows
ENV GOARCH=amd64
ENV GOPATH=/go
ENV CGO_ENABLED=1
ENV CC=x86_64-w64-mingw32-gcc
ENV CXX=x86_64-w64-mingw32-g++
ENV PATH="/go/bin:/usr/local/go/bin:${PATH}"
ENV PKG_CONFIG_PATH=/windows/mingw64/lib/pkgconfig
ENV MSYS2_ARCH=x86_64

# install build dependencies
RUN set -ex \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        gcc-mingw-w64-x86-64 \
        git \
        upx \
        pkg-config \
    && rm -rf /var/lib/apt/lists/*

# install golang
RUN set -ex \
    && wget -P /tmp -q https://dl.google.com/go/go$GOVERSION.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf /tmp/go$GOVERSION.linux-amd64.tar.gz

# install build dependencies
#RUN set -ex \
#    && pacman --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-libsamplerate \
#    && pacman --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-portaudio \
#    && pacman --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-opus \
#    && pacman --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-opusfile \
#    && pacman --noconfirm -Sc

# install runtime dependencies (DLLs)
#RUN set -ex \
#    && pacman-cross --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-libsamplerate \
#    && pacman-cross --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-portaudio \
#    && pacman-cross --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-opus \
#    && pacman-cross --noconfirm --needed -Sy mingw-w64-$MSYS2_ARCH-opusfile \
#    && pacman-cross --noconfirm -Sc

# install build dependencies (code generators)
#RUN set -ex \
#    && GOOS=linux GOOARCH=amd64 go get github.com/gogo/protobuf/protoc-gen-gofast \
#    && GOOS=linux GOOARCH=amd64 go get github.com/GeertJohan/go.rice/rice \
#    && GOOS=linux GOOARCH=amd64 go get github.com/micro/protoc-gen-micro

#COPY ./scripts /scripts

COPY go.mod \
    go.sum \
    /apps/go/

WORKDIR /apps/go/

RUN go mod download

COPY main.go /apps/go/
RUN go build -o openport-windows-amd64 main.go
